# ============================================
# ENVIRONMENT CONFIGURATION EXAMPLE
# ============================================
# Copy this file to:
# - .env (for docker-compose)
# - .env.local (for local development without Docker)
# - .env.staging (for staging environment)
# - .env.production (for production environment)
# ============================================

# Application
APP_ENV=local
APP_NAME=Event Ticketing API
APP_VERSION=1.0.0
PORT=8080

# Database (PostgreSQL)
# For Docker: use 'postgres' as host
# For local: use 'localhost' as host
DB_HOST=localhost
DB_PORT=5432
DB_USER=postgres
DB_PASSWORD=postgres
DB_NAME=event_ticketing
DB_SSLMODE=disable

# Redis
# For Docker: use 'redis' as host
# For local: use 'localhost' as host
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# Server Timeouts
SERVER_READ_TIMEOUT=30s
SERVER_WRITE_TIMEOUT=30s
SERVER_IDLE_TIMEOUT=60s

# Logging
LOG_LEVEL=debug
LOG_FORMAT=text

# CORS
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://localhost:8080
ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS,PATCH
ALLOWED_HEADERS=Content-Type,Authorization

# Rate Limiting
RATE_LIMIT_ENABLED=false
RATE_LIMIT_REQUESTS=1000
RATE_LIMIT_WINDOW=1m

# Security (Generate secure values for production)
# JWT_SECRET=your-secret-key-here
# API_KEY=your-api-key-here

# Feature Flags
FEATURE_PAYMENT_ENABLED=true
FEATURE_EMAIL_NOTIFICATIONS=false
FEATURE_SMS_NOTIFICATIONS=false
